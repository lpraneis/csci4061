==21037== Memcheck, a memory error detector
==21037== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21037== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==21037== Command: ../bl_client test-15-serv Clark1
==21037== 
-- Clark1 JOINED --
Clark1>>Superman!==21037== Thread 2:
==21037== Syscall param write(buf) points to uninitialised byte(s)
==21037==    at 0x4E4D2B7: write (write.c:27)
==21037==    by 0x10A015: user_thread (bl_client.c:94)
==21037==    by 0x4E436DA: start_thread (pthread_create.c:463)
==21037==    by 0x517C88E: clone (clone.S:95)
==21037==  Address 0x5c4b9eb is on thread 2's stack
==21037==  in frame #1, created by user_thread (bl_client.c:77)
==21037== 
[Clark1] : Superman!
-- Bruce1 JOINED --
[Bruce1] : Batman!
[Clark1] : Superman!
-- Bruce1 DEPARTED --
[Clark1] : Superman!
-- Lois1 JOINED --
[Lois1] : Not again
-- Bruce2 JOINED --
[Bruce2] : Vanish!
-- Bruce2 DEPARTED --
[Clark1] : He he
[Clark1] : Super speed
Clark1>>==21037== Syscall param write(buf) points to uninitialised byte(s)
==21037==    at 0x4E4D2B7: write (write.c:27)
==21037==    by 0x10A0B1: user_thread (bl_client.c:105)
==21037==    by 0x4E436DA: start_thread (pthread_create.c:463)
==21037==    by 0x517C88E: clone (clone.S:95)
==21037==  Address 0x5c4b9eb is on thread 2's stack
==21037==  in frame #1, created by user_thread (bl_client.c:77)
==21037== 

==21037== 
==21037== HEAP SUMMARY:
==21037==     in use at exit: 0 bytes in 0 blocks
==21037==   total heap usage: 8 allocs, 8 frees, 6,334 bytes allocated
==21037== 
==21037== All heap blocks were freed -- no leaks are possible
==21037== 
==21037== For counts of detected and suppressed errors, rerun with: -v
==21037== Use --track-origins=yes to see where uninitialised values come from
==21037== ERROR SUMMARY: 6 errors from 2 contexts (suppressed: 0 from 0)
