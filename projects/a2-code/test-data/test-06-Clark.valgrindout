==19472== Memcheck, a memory error detector
==19472== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19472== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==19472== Command: ../bl_client test-06-serv Clark
==19472== 
-- Clark JOINED --
[Bruce] : What's happen'?
Clark>>Not much, how about you?==19472== Thread 2:
==19472== Syscall param write(buf) points to uninitialised byte(s)
==19472==    at 0x4E4D2B7: write (write.c:27)
==19472==    by 0x10A015: user_thread (bl_client.c:94)
==19472==    by 0x4E436DA: start_thread (pthread_create.c:463)
==19472==    by 0x517C88E: clone (clone.S:95)
==19472==  Address 0x5c4b9ea is on thread 2's stack
==19472==  in frame #1, created by user_thread (bl_client.c:77)
==19472== 
[Clark] : Not much, how about you?
[Bruce] : Hangin' out...
[Bruce] : In the BATCAVE
[Clark] : I figured...
[Clark] : I'm out
Clark>>==19472== Syscall param write(buf) points to uninitialised byte(s)
==19472==    at 0x4E4D2B7: write (write.c:27)
==19472==    by 0x10A0B1: user_thread (bl_client.c:105)
==19472==    by 0x4E436DA: start_thread (pthread_create.c:463)
==19472==    by 0x517C88E: clone (clone.S:95)
==19472==  Address 0x5c4b9ea is on thread 2's stack
==19472==  in frame #1, created by user_thread (bl_client.c:77)
==19472== 

==19472== 
==19472== HEAP SUMMARY:
==19472==     in use at exit: 0 bytes in 0 blocks
==19472==   total heap usage: 8 allocs, 8 frees, 6,334 bytes allocated
==19472== 
==19472== All heap blocks were freed -- no leaks are possible
==19472== 
==19472== For counts of detected and suppressed errors, rerun with: -v
==19472== Use --track-origins=yes to see where uninitialised values come from
==19472== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
